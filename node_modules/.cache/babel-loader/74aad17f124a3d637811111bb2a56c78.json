{"ast":null,"code":"var _jsxFileName = \"/home/lfbianchi/GitHub/javascriptWs/sudokusolver/my-app/src/index.js\";\n\n/*\n**React app to implement a algorithm to solve a sudoku board, you can input the values one by one or try one of the\nsample boards.\n**For more information regarding the inner workings of this app, please see sudokusolver.js.\nauthor: Luiz Fernando Bianchi dos Santos\n*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SudokuSolver from './sudokusolver.js';\nimport { boards } from './sudokusolver.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Square extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\",\n      onClick: () => this.props.onClick(),\n      children: this.props.value > 0 ? this.props.value : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]],\n      solvable: true,\n      solved: false\n    };\n    this.solveBoard = this.solveBoard.bind(this);\n  }\n\n  renderSquare(i, j) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.state.board[i][j],\n      onClick: () => this.fillSquare(i, j)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n  fillSquare(i, j) {\n    var board = this.state.board.slice();\n    var number;\n    var userInput = prompt(\"Enter a number.\");\n\n    try {\n      number = parseInt(userInput);\n\n      if (number > 9 || number < 1) {\n        alert(\"Please enter an integer from 1 to 9.\");\n      } else {\n        board[i][j] = number;\n        this.setState({\n          board: board\n        });\n      }\n\n      ;\n    } catch {\n      alert(\"Please enter an integer from 1 to 9.\");\n    }\n\n    ;\n  }\n\n  solveBoard() {\n    //Solves the array using the .solve() method of the class SudokuBoard.\n    let targetBoard = this.state.board.slice();\n    let solver = new SudokuSolver(targetBoard);\n    let result = solver.solve();\n\n    if (result === \"Unsolvable.\") {\n      this.setState({\n        solvable: false\n      });\n    } else {\n      this.setState({\n        board: result,\n        solved: true\n      });\n    }\n\n    ;\n  }\n\n  fillSample() {\n    //Retrieves a sample game from the boards array imported from sudokusolver.\n    let randBoards = [...boards];\n    let randBoard = randBoards[Math.floor(Math.random() * randBoards.length)];\n    this.setState({\n      board: randBoard\n    });\n  }\n\n  restart() {\n    //Resets the state of the board to the starting values.\n    this.setState({\n      board: [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]],\n      solvable: true,\n      solved: false\n    });\n  }\n\n  render() {\n    let status = 'Please enter the starting numbers.';\n    let button1;\n    let button2;\n\n    if (this.state.solved) {\n      status = \"Solved!\";\n      button1 = /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.restart(),\n        children: \"Try again?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 23\n      }, this);\n    } else {\n      button2 = /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.fillSample(),\n        children: \"Try sample sudoku\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 23\n      }, this);\n      button1 = /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.solveBoard(),\n        children: \"Solve it!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 23\n      }, this);\n    }\n\n    if (this.state.solvable) {\n      //9x9 sudoku board, each square is a button that updates a field of the matrix.\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status\",\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-row\",\n          children: [this.renderSquare(0, 0), this.renderSquare(0, 1), this.renderSquare(0, 2), this.renderSquare(0, 3), this.renderSquare(0, 4), this.renderSquare(0, 5), this.renderSquare(0, 6), this.renderSquare(0, 7), this.renderSquare(0, 8)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-row\",\n          children: [this.renderSquare(1, 0), this.renderSquare(1, 1), this.renderSquare(1, 2), this.renderSquare(1, 3), this.renderSquare(1, 4), this.renderSquare(1, 5), this.renderSquare(1, 6), this.renderSquare(1, 7), this.renderSquare(1, 8)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-row\",\n          children: [this.renderSquare(2, 0), this.renderSquare(2, 1), this.renderSquare(2, 2), this.renderSquare(2, 3), this.renderSquare(2, 4), this.renderSquare(2, 5), this.renderSquare(2, 6), this.renderSquare(2, 7), this.renderSquare(2, 8)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-row\",\n          children: [this.renderSquare(3, 0), this.renderSquare(3, 1), this.renderSquare(3, 2), this.renderSquare(3, 3), this.renderSquare(3, 4), this.renderSquare(3, 5), this.renderSquare(3, 6), this.renderSquare(3, 7), this.renderSquare(3, 8)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-row\",\n          children: [this.renderSquare(4, 0), this.renderSquare(4, 1), this.renderSquare(4, 2), this.renderSquare(4, 3), this.renderSquare(4, 4), this.renderSquare(4, 5), this.renderSquare(4, 6), this.renderSquare(4, 7), this.renderSquare(4, 8)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-row\",\n          children: [this.renderSquare(5, 0), this.renderSquare(5, 1), this.renderSquare(5, 2), this.renderSquare(5, 3), this.renderSquare(5, 4), this.renderSquare(5, 5), this.renderSquare(5, 6), this.renderSquare(5, 7), this.renderSquare(5, 8)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-row\",\n          children: [this.renderSquare(6, 0), this.renderSquare(6, 1), this.renderSquare(6, 2), this.renderSquare(6, 3), this.renderSquare(6, 4), this.renderSquare(6, 5), this.renderSquare(6, 6), this.renderSquare(6, 7), this.renderSquare(6, 8)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-row\",\n          children: [this.renderSquare(7, 0), this.renderSquare(7, 1), this.renderSquare(7, 2), this.renderSquare(7, 3), this.renderSquare(7, 4), this.renderSquare(7, 5), this.renderSquare(7, 6), this.renderSquare(7, 7), this.renderSquare(7, 8)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-row\",\n          children: [this.renderSquare(8, 0), this.renderSquare(8, 1), this.renderSquare(8, 2), this.renderSquare(8, 3), this.renderSquare(8, 4), this.renderSquare(8, 5), this.renderSquare(8, 6), this.renderSquare(8, 7), this.renderSquare(8, 8)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-1\",\n          children: button1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-2\",\n          children: button2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"The board you entered was not solvable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.restart(),\n          children: \"Try again?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }, this);\n    }\n\n    ;\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 256,\n  columnNumber: 5\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/home/lfbianchi/GitHub/javascriptWs/sudokusolver/my-app/src/index.js"],"names":["React","ReactDOM","SudokuSolver","boards","Square","Component","constructor","props","render","onClick","value","Board","state","board","solvable","solved","solveBoard","bind","renderSquare","i","j","fillSquare","slice","number","userInput","prompt","parseInt","alert","setState","targetBoard","solver","result","solve","fillSample","randBoards","randBoard","Math","floor","random","length","restart","status","button1","button2","document","getElementById"],"mappings":"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","sourcesContent":["/*\n**React app to implement a algorithm to solve a sudoku board, you can input the values one by one or try one of the\nsample boards.\n**For more information regarding the inner workings of this app, please see sudokusolver.js.\nauthor: Luiz Fernando Bianchi dos Santos\n*/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport SudokuSolver from './sudokusolver.js';\nimport { boards } from './sudokusolver.js';\n\nclass Square extends React.Component {\n    constructor(props) {\n        super(props);\n    };\n\n     render() {\n        return (\n            <button className=\"square\"\n                    onClick={() => this.props.onClick()}\n            >\n                {(this.props.value > 0 ? this.props.value : \"\")}\n            </button>\n        );\n    };\n};\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            board: [\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0, 0]\n            ],\n            solvable: true,\n            solved: false\n        };\n\n        this.solveBoard = this.solveBoard.bind(this);\n    };\n\n    renderSquare(i, j) {\n        return (\n            <Square value={this.state.board[i][j]}\n                    onClick={() => this.fillSquare(i, j)}\n            />\n        );\n    };\n\n    fillSquare(i, j) {\n        var board = this.state.board.slice();\n        var number;\n        var userInput = prompt(\"Enter a number.\");\n\n        try {\n            number = parseInt(userInput);\n            if(number > 9 || number < 1) {\n                alert(\"Please enter an integer from 1 to 9.\");\n            } else {\n                board[i][j] = number;\n                this.setState({board: board});\n            };\n        } catch {\n            alert(\"Please enter an integer from 1 to 9.\");\n        };\n    };\n\n    solveBoard() {\n        //Solves the array using the .solve() method of the class SudokuBoard.\n        let targetBoard = this.state.board.slice();\n        let solver = new SudokuSolver(targetBoard);\n        let result = solver.solve();\n        if (result === \"Unsolvable.\") {\n            this.setState({solvable: false});\n        } else {\n            this.setState({\n                board: result,\n                solved: true\n            });\n        };\n    };\n\n    fillSample() {\n        //Retrieves a sample game from the boards array imported from sudokusolver.\n        let randBoards = [...boards];\n        let randBoard = randBoards[Math.floor(Math.random() * randBoards.length)];\n        this.setState({board: randBoard});\n    };\n\n    restart() {\n        //Resets the state of the board to the starting values.\n        this.setState({\n            board: [\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0, 0]\n            ],\n            solvable: true,\n            solved: false\n        });\n    };\n\n    render() {\n\n        let status = 'Please enter the starting numbers.';\n        let button1;\n        let button2;\n\n        if(this.state.solved) {\n            status = \"Solved!\";\n            button1 = <button onClick={() => this.restart()}>Try again?</button>\n        } else {\n            button2 = <button onClick={() => this.fillSample()}>Try sample sudoku</button>;\n            button1 = <button onClick={() => this.solveBoard()}>Solve it!</button>;\n        }\n        if(this.state.solvable) {\n            //9x9 sudoku board, each square is a button that updates a field of the matrix.\n            return (\n            <div>\n                <div className=\"status\">{status}</div>\n\n                <div className=\"board-row\">\n                    {this.renderSquare(0, 0)}\n                    {this.renderSquare(0, 1)}\n                    {this.renderSquare(0, 2)}\n                    {this.renderSquare(0, 3)}\n                    {this.renderSquare(0, 4)}\n                    {this.renderSquare(0, 5)}\n                    {this.renderSquare(0, 6)}\n                    {this.renderSquare(0, 7)}\n                    {this.renderSquare(0, 8)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(1, 0)}\n                    {this.renderSquare(1, 1)}\n                    {this.renderSquare(1, 2)}\n                    {this.renderSquare(1, 3)}\n                    {this.renderSquare(1, 4)}\n                    {this.renderSquare(1, 5)}\n                    {this.renderSquare(1, 6)}\n                    {this.renderSquare(1, 7)}\n                    {this.renderSquare(1, 8)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(2, 0)}\n                    {this.renderSquare(2, 1)}\n                    {this.renderSquare(2, 2)}\n                    {this.renderSquare(2, 3)}\n                    {this.renderSquare(2, 4)}\n                    {this.renderSquare(2, 5)}\n                    {this.renderSquare(2, 6)}\n                    {this.renderSquare(2, 7)}\n                    {this.renderSquare(2, 8)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3, 0)}\n                    {this.renderSquare(3, 1)}\n                    {this.renderSquare(3, 2)}\n                    {this.renderSquare(3, 3)}\n                    {this.renderSquare(3, 4)}\n                    {this.renderSquare(3, 5)}\n                    {this.renderSquare(3, 6)}\n                    {this.renderSquare(3, 7)}\n                    {this.renderSquare(3, 8)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(4, 0)}\n                    {this.renderSquare(4, 1)}\n                    {this.renderSquare(4, 2)}\n                    {this.renderSquare(4, 3)}\n                    {this.renderSquare(4, 4)}\n                    {this.renderSquare(4, 5)}\n                    {this.renderSquare(4, 6)}\n                    {this.renderSquare(4, 7)}\n                    {this.renderSquare(4, 8)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(5, 0)}\n                    {this.renderSquare(5, 1)}\n                    {this.renderSquare(5, 2)}\n                    {this.renderSquare(5, 3)}\n                    {this.renderSquare(5, 4)}\n                    {this.renderSquare(5, 5)}\n                    {this.renderSquare(5, 6)}\n                    {this.renderSquare(5, 7)}\n                    {this.renderSquare(5, 8)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6, 0)}\n                    {this.renderSquare(6, 1)}\n                    {this.renderSquare(6, 2)}\n                    {this.renderSquare(6, 3)}\n                    {this.renderSquare(6, 4)}\n                    {this.renderSquare(6, 5)}\n                    {this.renderSquare(6, 6)}\n                    {this.renderSquare(6, 7)}\n                    {this.renderSquare(6, 8)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(7, 0)}\n                    {this.renderSquare(7, 1)}\n                    {this.renderSquare(7, 2)}\n                    {this.renderSquare(7, 3)}\n                    {this.renderSquare(7, 4)}\n                    {this.renderSquare(7, 5)}\n                    {this.renderSquare(7, 6)}\n                    {this.renderSquare(7, 7)}\n                    {this.renderSquare(7, 8)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(8, 0)}\n                    {this.renderSquare(8, 1)}\n                    {this.renderSquare(8, 2)}\n                    {this.renderSquare(8, 3)}\n                    {this.renderSquare(8, 4)}\n                    {this.renderSquare(8, 5)}\n                    {this.renderSquare(8, 6)}\n                    {this.renderSquare(8, 7)}\n                    {this.renderSquare(8, 8)}\n                </div>\n                <div className=\"button-1\">{button1}</div>\n                <div className=\"button-2\">{button2}</div>\n            </div>\n            );\n        } else {\n            return (\n            <div>\n                <div>The board you entered was not solvable</div>\n                <button onClick={() => this.restart()}>Try again?</button>\n            </div>\n            );\n        };\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Board />,\n    document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}